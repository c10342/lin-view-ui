@import "src/styles/variables/text-effect.scss";

.lin-text-effect {
  border: 0;
  position: relative;
  outline: none;
  padding: $text-effect-padding;

  overflow: hidden;
  font-weight: $text-effect-font-weight;
}

.lin-text-effect-theme-neon {
  background-color: transparent;
  transition: $text-effect-neon-transition;

  @each $key, $val in $theme-color {
    &.lin-text-effect-type-#{$key} {
      color: $val;
      border: $text-effect-neon-border-width solid $val;
      &:hover {
        color: white;
        border-color: $val;
        background-color: $val;
        box-shadow: $text-effect-neon-box-shadow $val;
      }
    }
  }
}

.lin-text-effect-theme-border {
  background: none;
  box-sizing: border-box;

  &::before,
  &::after {
    box-sizing: inherit;
    position: absolute;
    content: "";
    border: $text-effect-border-border-width solid transparent;
    width: 0;
    height: 0;
  }

  &::after {
    bottom: 0;
    right: 0;
  }

  &::before {
    top: 0;
    left: 0;
  }

  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    transition: $text-effect-border-before-transition;
  }
  &:hover::after {
    transition: $text-effect-border-after-transition;
  }

  @each $key, $val in $theme-color {
    &.lin-text-effect-type-#{$key} {
      color: $val;
      &:hover::before {
        border-top-color: $val;
        border-right-color: $val;
      }
      &:hover::after {
        border-bottom-color: $val;
        border-left-color: $val;
      }
    }
  }
}

.lin-text-effect-theme-fillet {
  border-radius: $text-effect-fillet-border-radius;
  color: $text-effect-fillet-color;
  transition: $text-effect-fillet-transition;

  @each $key, $val in $theme-color {
    &.lin-text-effect-type-#{$key} {
      background: $val;
    }
  }

  &:hover {
    border-bottom-right-radius: $text-effect-fillet-bottom-right-radius;
    border-top-left-radius: $text-effect-fillet-top-left-radius;
    border-bottom-left-radius: $text-effect-fillet-bottom-left-radius;
    border-top-right-radius: $text-effect-fillet-top-right-radius;
  }
}

.lin-text-effect-theme-frozen {
  border-radius: $text-effect-frozen-border-radius;
  color: $text-effect-frozen-color;

  &:before {
    content: "";
    display: block;
    background: $text-effect-frozen-background;
    background-size: 210% 100%;
    background-position: right bottom;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    border-radius: $text-effect-frozen-border-radius;
    transition: $text-effect-frozen-transition;
  }

  @each $key, $val in $theme-color {
    &.lin-text-effect-type-#{$key} {
      background: linear-gradient(to right, $val, adjust-hue($val, 30deg));
      //   background: linear-gradient(to right, $val, saturate($val, 40deg));
      box-shadow: $text-effect-frozen-box-shadow $val;
    }
    &.lin-text-effect-type-#{$key}:hover:before {
      background-position: left bottom;
    }
  }
}

.lin-text-effect-theme-shiny {
  background: transparent;
  // text-transform: uppercase;

  @each $key, $val in $theme-color {
    &.lin-text-effect-type-#{$key} {
      border: $text-effect-shiny-border-width solid $val;
      color: $val;
      &:after {
        background: $val;
      }
    }
  }

  &:after {
    content: "";
    display: block;
    position: absolute;
    top: $text-effect-shiny-top;
    left: $text-effect-shiny-left;
    width: $text-effect-shiny-width;
    height: $text-effect-shiny-height;
    opacity: $text-effect-shiny-opacity;
    transform: $text-effect-shiny-transform;
  }

  &:hover:after {
    left: $text-effect-shiny-hover-left;
    transition: $text-effect-shiny-transition;
  }
}
